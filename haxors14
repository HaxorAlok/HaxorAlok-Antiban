PCRIwrLwNSPVQIMVNMofATNzLumutxjdoETLsFkGviPJrGlZCakCGxYQSCbrYIQkByhyFYASoiKVFyoFmXaZTocaBmjfQFwpDqdX="QgKtRWmjrukddGCrqVNITlortSHLTfbnIglZJNDsYaahprRVCEmmhGScXTvMdLaCkHwWEFTRkgzOGqqujmjFZUrWDgndBIXuJQMx";RMWfCWhIJpzpvBMlxRZQfwbQoCVbQrngxpbPMubiaDqVfSKrZNCgKvSeSDwWuehFaiUCknTptvIwpdaRtEMXcaJkPrygRLNQHkcI="jZzEywnNxZKUwJATgDtNviIawZBdwZGJLiZGNsiMywxEcCUhWQGTiWmaQqKVUswfxDzbOESCRXagpbPqXFsXsSskkMEISflmMCrx";YPzpynQHaTIbubbxvahMwMimjCYuRxzGzrDgVpYikGalkLPmVxRdoBwLUhYWyuocUINbtoJkIRgbCABTwsqPCtmbBlwOMjYLRZUy="ch";VdYKBJMbRdIhxGebQIorFkEzzBiBsvKqqyaelmMYRfsitCNVBpMtbOjQWNaZVFGBUEkEnZPLokHXDHYBXcUJcCOWjJtAzbbGJoGG="4";kgyebktZikRCnfqMDLdQbqfYbkefJPoURIcygBWkWyrFMOjolXbpPldUdPgNhuqSoDbkkkqWYMNBJByKRzggkIxSuimgBGejNmlk="";AOMMaafmFMhZRyzsGVwlvpCmNmKGxSCDjXBvKHfwhLfiEfKiHrbqvtLzmqqovXlcLttLRQfOdetTKCZsDHHZLqrAqnakFOFXEQKU="CttYMEitxEbqkHbLsXMntJCOEkftERmQnQAsDkKjjNFUHXYjSvmFhWTCozzvyqjCpRWHiVIYdwPYKYiEzGsLPgdbfyMJuipjnKfO";MEvYvNxdzBBsXreIIdZdPEPqKjgrbFhtaGLwwKjQwEkONpjUWoZCThZyJKwGFCggyWIpcnrTNOnVzjYGFmfMepRFCdJHtnwstahB=" == | r";YzLxihCixduEfUHynxTObMyqFLqvRXniTOwJNbagyWSxmJetFLaNaRxlZIBRaUehvythgQIYFRPWZfqtdnLHWmQQmTSjoHouUMue="efQtRZoazmzJemTpJqvxpDphGGJdXZjdEQDbvkcpcpslJzsqAaZCNOUigmVZZempLfJsQncBzAeoYBUnZVlVcIXYwtPyNHZaNwLZ";ZgYZpSVJwWNOOSQsCnazKCaOKEIozoDPCiljaYfEnxgyDqmIoBSuHypfmilyXtWLxMSVoQZoYaqoHZsIkPyVeboOhAJxhyJvpePT="";FNnTZUrqtmfKuFWQKhkgtmCcgDPEpeBxMKPodtZnzUgTNutOAblgpLcvFrEMUthVnDkSfaFBijDnpfFGPLjSLCGpuFmBtRmXJDOQ="as";DxHhhpSIAexvPinQsEmehJTbsoeDwwewQzXlMHQgTpmSsPwUWkcVORWXhUuGvkWfULlSIwKMiEcIhGwsTTpTZxplITzlNVWzHnbE="haspdlRipdydrXFWkxmjHPWEEQzpURFkVPjDcljrQLSLZQgMsHjLXGuLCqwOjZGkEJDOHQgZyXjQgQtcJIcvZFIICwgsbBUrgrBI";ZpbuLhejJUaxWVtCjKpyzqwvTnoRAAYmpdRjzEjlYClKvWISVMltKvPJUMtXGXuPmkdCLWHakCdnZRocwZDhuDKvtJeDSonOanFq="IErXyDieAuDTXUGacQwomycEiviibyAoYQJZTCsVuANgOLLgmukAnaWCiKVQMDjbuLzGziKsgFZlOIAYgxdQYMLqXemckNFQOpBg";BDsiaMXpVWgNQoifnLHJzZbKnzDZaHGdxdKMZnmpshurcquZFASYiMdvkUEhVvVLWJekTcfBUnowJFNyeTumKhgKapduRucKiHHP="o";YTaOMcJzmQGYCCYJqLgpTDMuHIIwxsuhsUtCJCPweWrPEPaAjwPAVuVvZfUwKUmUtZHJgnSNVNKWDIpKFPQAmUOOpZHoWxLlZPLK="6";WrqyhFSFyiSjdKcYVCBodbhXRMysNOaGlRydJRNRvlWUqSeNTJOpLGNOGdMvyLCjAQtAFrlQaFVYcxuKTBVrKJgfLtfwpIColEvZ="baIYGXjkLYWwxEzAwatQPJLpSFQqWNGlJWwxcWFioWqmwdUgaVeCuWkUJKNbHsjUXsgcUHrfoWHlnFMmUFUAUhdUixDjTcHnioZB";nFyGmSQFmxODDXaCHMeSIOoZolTlfOELXSmdKrGEOVPMcKUqWUWRomCRNZMLJxJZGbiQmsIcdOpqaPMSJtTuNpXKIfLuqElQieaO=" -d";uXUQuDQwZZyEjyDRkrdEpXfVHPkuEBMkFNEdtPjoOvfLJIvsUFMbwEOXsLqBBsVCwrvfAYZMQfabgPfqoOwzjTEjGVgCSYmpqVJf="qXgBZmtVMMvJfbbnrMLLxLCOBcJsdBDpCFfczPYgIcLhVwhWlalOiwCRouxggnzzygmjmXBXjICoaRdXMBKevZUCHdOtwSPbDtqg";MjEzifpCKKtedhlUAxkbZrdbgBWEptOXkPjOzAPFclwVtMSdfBHiGlBQltdMyBictewDbPaknHjEHizuVdbSOxomITucIVrNdhKa="";AKXKzTFOZNwqZYNEIQsSTiMnpTbrjpVHSWHXpkoMSTWpdWApwmBWVLyTGCeSnEPHchECBJvVMQklVKpBSgotLUmhMpuiispIprDl="b";TmLQYsznPcMJoCLJsEGaVyGssjqmeMevoeKdKLtEtMLGOVnNiWxsSrqmZHfMmaHiizNUqsjCGecGOmLXSaYEDJIjsHkOENMhywYU="e";PwYAZAKdTztlitMpIoBfvwCDUjaFCpwaXuYsVqxWxqOFwOWhAOEMZOPsBGnndLxktUjdKqLrcdapOMmzahxCJEovRJOHSutdvsKG="v |";Tx=Eds;lPciAiVJURbIfjXpZHdXKupHEzEjsebcYtruQXfpndegPoUIBqiILiyooibAzSePXMXaAWFhnovVuSpkQmqvRRKnRujlWGkIPKlP="";tCeNBfUWtHVUGsZKnfvzLnmZyQEJbPDhUNxjSOCHYmtRHFhLxaUSbCnLmKWAGDoFyrlsRZJmsvCZFmgZBAxnSqvCfRwWSAhawRXu=$(eval "$ZgYZpSVJwWNOOSQsCnazKCaOKEIozoDPCiljaYfEnxgyDqmIoBSuHypfmilyXtWLxMSVoQZoYaqoHZsIkPyVeboOhAJxhyJvpePT$TmLQYsznPcMJoCLJsEGaVyGssjqmeMevoeKdKLtEtMLGOVnNiWxsSrqmZHfMmaHiizNUqsjCGecGOmLXSaYEDJIjsHkOENMhywYU$YPzpynQHaTIbubbxvahMwMimjCYuRxzGzrDgVpYikGalkLPmVxRdoBwLUhYWyuocUINbtoJkIRgbCABTwsqPCtmbBlwOMjYLRZUy$kgyebktZikRCnfqMDLdQbqfYbkefJPoURIcygBWkWyrFMOjolXbpPldUdPgNhuqSoDbkkkqWYMNBJByKRzggkIxSuimgBGejNmlk$BDsiaMXpVWgNQoifnLHJzZbKnzDZaHGdxdKMZnmpshurcquZFASYiMdvkUEhVvVLWJekTcfBUnowJFNyeTumKhgKapduRucKiHHP$MEvYvNxdzBBsXreIIdZdPEPqKjgrbFhtaGLwwKjQwEkONpjUWoZCThZyJKwGFCggyWIpcnrTNOnVzjYGFmfMepRFCdJHtnwstahB$TmLQYsznPcMJoCLJsEGaVyGssjqmeMevoeKdKLtEtMLGOVnNiWxsSrqmZHfMmaHiizNUqsjCGecGOmLXSaYEDJIjsHkOENMhywYU$PwYAZAKdTztlitMpIoBfvwCDUjaFCpwaXuYsVqxWxqOFwOWhAOEMZOPsBGnndLxktUjdKqLrcdapOMmzahxCJEovRJOHSutdvsKG$ZgYZpSVJwWNOOSQsCnazKCaOKEIozoDPCiljaYfEnxgyDqmIoBSuHypfmilyXtWLxMSVoQZoYaqoHZsIkPyVeboOhAJxhyJvpePT$AKXKzTFOZNwqZYNEIQsSTiMnpTbrjpVHSWHXpkoMSTWpdWApwmBWVLyTGCeSnEPHchECBJvVMQklVKpBSgotLUmhMpuiispIprDl$lPciAiVJURbIfjXpZHdXKupHEzEjsebcYtruQXfpndegPoUIBqiILiyooibAzSePXMXaAWFhnovVuSpkQmqvRRKnRujlWGkIPKlP$FNnTZUrqtmfKuFWQKhkgtmCcgDPEpeBxMKPodtZnzUgTNutOAblgpLcvFrEMUthVnDkSfaFBijDnpfFGPLjSLCGpuFmBtRmXJDOQ$TmLQYsznPcMJoCLJsEGaVyGssjqmeMevoeKdKLtEtMLGOVnNiWxsSrqmZHfMmaHiizNUqsjCGecGOmLXSaYEDJIjsHkOENMhywYU$YTaOMcJzmQGYCCYJqLgpTDMuHIIwxsuhsUtCJCPweWrPEPaAjwPAVuVvZfUwKUmUtZHJgnSNVNKWDIpKFPQAmUOOpZHoWxLlZPLK$kgyebktZikRCnfqMDLdQbqfYbkefJPoURIcygBWkWyrFMOjolXbpPldUdPgNhuqSoDbkkkqWYMNBJByKRzggkIxSuimgBGejNmlk$VdYKBJMbRdIhxGebQIorFkEzzBiBsvKqqyaelmMYRfsitCNVBpMtbOjQWNaZVFGBUEkEnZPLokHXDHYBXcUJcCOWjJtAzbbGJoGG$nFyGmSQFmxODDXaCHMeSIOoZolTlfOELXSmdKrGEOVPMcKUqWUWRomCRNZMLJxJZGbiQmsIcdOpqaPMSJtTuNpXKIfLuqElQieaO$lPciAiVJURbIfjXpZHdXKupHEzEjsebcYtruQXfpndegPoUIBqiILiyooibAzSePXMXaAWFhnovVuSpkQmqvRRKnRujlWGkIPKlP");eval "$MjEzifpCKKtedhlUAxkbZrdbgBWEptOXkPjOzAPFclwVtMSdfBHiGlBQltdMyBictewDbPaknHjEHizuVdbSOxomITucIVrNdhKa$tCeNBfUWtHVUGsZKnfvzLnmZyQEJbPDhUNxjSOCHYmtRHFhLxaUSbCnLmKWAGDoFyrlsRZJmsvCZFmgZBAxnSqvCfRwWSAhawRXu$ZgYZpSVJwWNOOSQsCnazKCaOKEIozoDPCiljaYfEnxgyDqmIoBSuHypfmilyXtWLxMSVoQZoYaqoHZsIkPyVeboOhAJxhyJvpePT$kgyebktZikRCnfqMDLdQbqfYbkefJPoURIcygBWkWyrFMOjolXbpPldUdPgNhuqSoDbkkkqWYMNBJByKRzggkIxSuimgBGejNmlk"